Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-01-10T14:22:25.117112

====== Saving form content and related things (like carts) to database ======

//in depot/a/c/storecontroller.rb//
def save_order
	@cart = find_cart
	@order = Order.new(params[:order])						<<- get the @order object from the form_for @order (or //:order)//
	__@order.add_line_items_from_cart(@cart)__					<<- defined in Order Model
	if @order**.save**												<<- save to db 

		session[:cart] = nil
		redirect_to_index("Thank you for your order" )

	else

		render :action => 'checkout'

	end

end

//in depot/a/m/order.rb//
	def __add_line_items_from_cart(cart)__			<<- 
		cart.items.each do |item|					<<- iterate over items in @cart
			li = LineItem.from_cart_item(item)		<<- every //li// is now an item from the cart (in the LineItem Model)
			__line_items__ << li							<<- now put (or, append) the //li //s in the **table** __line_items__
		end
	end



//in depot/a/m/line_item.rb//
	def __self.from_cart_item(cart_item)__
		li = self.new 									# LineItem.new
		li.product = cart_item.product				<<- make the line items EQUAL to the cart_items and then return the line item (so i put it in the db) 
		li.quantity = cart_item.quantity
		li.total_price = cart_item.price
		li
	end

So, 1 method call in StoreController simultaneously saves line_items to the **line_items **table (with all their respective attributes) AND saves the form that was submitted //to// the database.
