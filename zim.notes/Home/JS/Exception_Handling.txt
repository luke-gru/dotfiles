Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-07-08T19:38:32.524973

====== Exception Handling ======

**Throw:**
Works just like in Ruby: can throw any expression.

//Example://
function factorial(x) {
// If the input argument is invalid, thrown an exception!
if (x < 0) throw new Error("x must not be negative");
// Otherwise, compute a value and return normally
for(var f = 1; x > 1; f *= x, x--) /* empty */ ;
return f
}

**Try/Catch/FInally:**
Try is like Ruby's begin, Catch is like Ruby's rescue and Finally is like Ruby's ensure

try {
// Ask the user to enter a number
var n = prompt("Please enter a positive integer", "");
// Compute the factorial of the number, assuming that the user's
// input is valid
var f = factorial(n);
// Display the result
alert(n + "! = " + f);
}
catch (ex) { // If the user's input was not valid, we end up here
// Tell the user what the error is
alert(ex.__message__);			=> message method for error object (like Ruby)
}

