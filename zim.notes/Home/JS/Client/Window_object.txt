Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-07-12T15:02:59.616989

====== Window object ======

**Methods:**
setTimeout("function", time (ms) )		=> JS code to be run at future time
clearTimeout( )							=> cancel execution of setTimeout code
setInterval( )								=> set the code to be executed repeatedly at a given interval
clearInterval( )							=> cancel executin of setInterval code

open(URL, name(target), [size, decor], bool)		=> bool is when target is existing name, //true// means replace existing browser history entry (Default false)
//Will be popup blocked!! This method returns a new window object or an existing one. That object will have an//__ opener property__// that refers to the window object that opened it. //
The document object also has an open( ) method, so use __window.open__(...)! Test to see if a window is closed with //win.closed //property (bool)

//For scrolling and focus info, see Definitive Guide p. 210//

**Properties:**
status and defaultStatus									=> modern browsers don't allow  a change to the status bar
onerror 													=> whenever JS error occurs in THIS window, do this: (can be function)

frames				=> array of frames. Length is 0 if empty. May have another frames array as property if it contains other(s).
parent					=> window object in which frame is contained. if top-level window, parent === self
top					=> top-level window

name					=> starts out "" in top-window. Read/write value so you can use //target// attribute with top-level


**Frames:**
Execution in different frames uses the same JS interpreter, the only difference is the scope chains. JS in frames can refer to one another, write and read each
others values and copy values to their own scope. Beware that copying functions from another scope to variables in this scope will //still //have lexical scoping (closures).

<frame name="table_of_contents" src="toc.html">		=> if a frame is given a name, the name is stored as a property of //that //window object
