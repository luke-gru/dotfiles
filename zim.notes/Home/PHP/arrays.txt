Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-09-11T17:55:33.864199

====== arrays ======


**Regular Arrays**
**= ========== =**

//foreach loop://
foreach(array as elem) {
}

//new array://
$ary = array('one', 'two');

**Functions:**

__in_array__(needle, haystack)			=> boolean
__array_search__(needle, haystack)		=> index of needle
__array_walk__(function)					=> perform function for every flat node
__compact__(array)						=> turn into hash //***does more***//
__implode__(str_delim, array)			=> like Ruby's Array#join
__reset__(ary)								=> internal pointer back to index 0
current/next/prev(ary)
range(0,12)							=> returns array w/ values 0..12
range(0,100,10)						=> returns array w/ values 0,10,20. Step = 10


**Hash Arrays**
**= ======== =**

//Foreach loop://
 foreach($hash as $key => $value) {
        if ($product != $key) {
            continue;								=> like //next// in ruby
        } else {
            print ucfirst($key) . ": \${$value}";
        }
    }

**Functions:**

__array_key_exists__(key, hash)
__ksort__(hash, SORT_FLAG=SORT_REGULAR)				=> sort hash by keys. //Returns bool//. By default, don't do type converting. See //sort// for flag options.
