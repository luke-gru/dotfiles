Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-01-10T18:46:57.374700

====== Hashed passwords and virtual attributes ======

//*This is just to create users and populate their information into the users table in the database* //
Users table consists of columns(attribute) __name__, __salt__, and __hashed_password__

class User < ActiveRecord::Base							<<- easiest if just generate scaffold for user
 ** require 'digest/sha1'**
  validates_presence_of :name
  validates_uniqueness_of :name
  attr_accessor :password_confirmation				 <<- .password_confirmation returns @password_confirmation
  validates_confirmation_of :password					<<- cool validation method
  //validate// :password_non_blank

private

  def password_non_blank
    //errors.add//(:password, "Missing password") if hashed_password.blank?	<<- no hashed password in users table? byebye
  end

  def **self**.encrypted_password(password, salt)
    string_to_hash = password + "wibble" + salt
    Digest::SHA1.hexdigest(string_to_hash)
  end

  def create_new_salt
    __self.salt__ = __self.object_id__.to_s + rand.to_s				<<- User.new object is //self// here, creating salt attribute
  end

public

  def password
    @password
  end

  def password=(pwd)
    @password = pwd
    return if pwd.blank?
    create_new_salt
    self.hashed_password = User.encrypted_password(self.password, self.salt)
  end

  def **self**.authenticate(name, password)
    userobject = __User.find_by_name(name)__ 													<<- activerecord trick! dynamic finder method
    if userobject 																				<<- if there is such a name in the users table...
      expected_password = User.encrypted_password(password, userobject.salt)
      if userobject.hashed_password != expected_password								<<- if it doesn't match what's in the row for your name
        userobject = nil																			<<- then byebye
      end
    end
    userobject																					<<- otherwise, welcome
  end

end

*//Now it's time to create a login mechanism for the users, based on name and password columns in the users table*//
see [[Logging admin users in]]
