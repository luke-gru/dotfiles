Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2010-12-27T19:47:23.890928

====== Input.Output ======

â†’ Class IO is the base class for all I/O subclasses. Most commonly-used subclass is File.

**IO:**This method takes the name of an I/O source, opens it for reading, calls the iterator once for every line in the file, and then closes the file automatically:

IO.foreach("testingfile") {|line| puts line }		=> __.foreach__ reads lines

//read into (long) string://
str = IO.read("testingfile")
str.length 											 => 66 (chars, including \w)
str[0, 30]											 => "This is line 1\nThis is line 2\n"

//read into an array://
arr = IO.readlines("testfile")						=> __.readlines__ passes each line into one big array. e.g. a 16-line file's last element in array is indexed by array[15]
arr.length											=> 16
arr[0]												=> "This is line one\n"

**File:** 
//Create new file: first parameter is file name, second is 'r' for read, 'w' for write and 'r+' for read/write.//
file = File.new("testfile", "r")						<<- File.new info. Pickaxe p. 504
	# ... process the file

file.close

//Open file: when passed a block the file is automatically closed at keyword //__end__. //The parameter in the block is the whole file.//
File.open("testfile", "r") do |file|
	# ... process the file

end											 	<<- file automatically closed here

//Open file, get each line and copy to standard output://
File.open("testfile") do |file|
	while line = file.gets

		puts line

	end

end

//Open file with the //__each_line__// method://
File.open("testfile") do |file|
	file__.each_line__ {|line| puts "Got #{line__.dump__}" }							<<- dump shows the \n characters

end
=>
Got "This is line one\n"
Got "This is line two\n"
Got "This is line three\n"

//Open file with the //__each_line__ //method and char param://
File.open("testfile") do |file|
	file.each_line("e") {|line| puts "Got #{ line.dump }" }					<<- line separator is now 'e' (right after 'e')
end

//Open file and write to it://
File.open("output.txt", "w") do |file|
	__file.puts__ "Hello"
	__file.puts__ "1 + 2 = #{1+2}"

end
# Now read the file in and print its contents to STDOUT
puts File.read("output.txt")
=>
Hello
1 + 2 = 3

**String:**
//Example://
require 'stringio'
ip = StringIO.new("now is\nthe time\nto learn\nRuby!")
op = StringIO.new("", "w")
ip__.each_line__ do |line|
	op.puts line.reverse

end
op__.string__																=> "\nsi won\n\nemit eht\n\nnrael ot\n!ybuR\n"


