Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-04-23T18:50:34.385290

====== awk ======

**use:** awk '/pattern/ ({action})' (file)

example: $awk '/gold/ {print $5,$6,$7,$8}'

â†’ $x are fields or field variables, $1 stores the first word (word is a string of printing chars separated by spaces)

**default action:** awk '/gold/'// is the same// as awk '/gold/ {print}' //is the same as //awk '/gold/ {print __$0__}'

**No search pattern: **awk '{if ($3 < 1980) print $3, "        ",$5,$6,$7,$8}' coins.txt

This means awk will perform the actions on each line.
Note: awk is weakly-typed! All the fields are regarded as strings, but if the string represents a number, then we can perform arithmetic on the string

**Program Outline:**

   awk 'BEGIN              {<initializations>} 
        <search pattern 1> {<program actions>} 
        <search pattern 2> {<program actions>} 
        ...
        END                {<final actions>}'

if the second field is the ounces of gold of the coins, and gold was valued at $425/ounce, the following would calculate the total value

awk '/gold/ {ounces += $2} END {print "value = $" 425*ounces}' coins.txt

Note: the concatenation of the interpreted string and 'number' string is done with a <space>

http://www.vectorsite.net/tsawk_1.html#m1



